(function() {var implementors = {};
implementors["hashbrown"] = [{"text":"impl StructuralPartialEq for TryReserveError","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl StructuralPartialEq for Delimiter","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Spacing","synthetic":false,"types":[]}];
implementors["protodef_codegen"] = [{"text":"impl StructuralPartialEq for Diagnostics","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Diagnostic","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for CompilationUnit","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Type","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Struct","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Field","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Enum","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Variant","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BitFields","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for LengthPrefixedString","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for TypeId","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Protocol","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Type","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Container","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Field","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Switch","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BitFields","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for BitField","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Mapper","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl StructuralPartialEq for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; StructuralPartialEq for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl StructuralPartialEq for Category","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Value","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Number","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()